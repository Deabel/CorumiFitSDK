#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef CFDEVICEKIT_SWIFT_H
#define CFDEVICEKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CFDeviceKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

SWIFT_CLASS("_TtC11CFDeviceKit17CFAlarmClockModel")
@interface CFAlarmClockModel : NSObject
@property (nonatomic) NSInteger index;
@property (nonatomic) BOOL activated;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull repeatDaysWithNumbers;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, CFAlarmRepeatDay, open) {
  CFAlarmRepeatDaySun = 0,
  CFAlarmRepeatDayMon = 1,
  CFAlarmRepeatDayTue = 2,
  CFAlarmRepeatDayWed = 3,
  CFAlarmRepeatDayThu = 4,
  CFAlarmRepeatDayFri = 5,
  CFAlarmRepeatDaySat = 6,
};

@class CFConnectionHandler;
@class CFDeviceModel;
@protocol CFCentralManagerDelegate;

SWIFT_CLASS("_TtC11CFDeviceKit12CFBLEManager")
@interface CFBLEManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CFBLEManager * _Nonnull shared;)
+ (CFBLEManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CFConnectionHandler * _Null_unspecified connectionHandler;
@property (nonatomic, strong) CFDeviceModel * _Nullable currentDevice;
@property (nonatomic, weak) id <CFCentralManagerDelegate> _Nullable bleManagerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol CFDeviceDelegate;

@interface CFBLEManager (SWIFT_EXTENSION(CFDeviceKit))
- (void)addDeviceDelegate:(id <CFDeviceDelegate> _Nonnull)aDelegate;
@end


SWIFT_CLASS("_TtC11CFDeviceKit21CFBluetoothUsageModel")
@interface CFBluetoothUsageModel : NSObject
@property (nonatomic) double broadcastDuration;
@property (nonatomic) double connectionDuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class CBCentralManager;
@class CBPeripheral;
@class NSString;

SWIFT_PROTOCOL("_TtP11CFDeviceKit24CFCentralManagerDelegate_")
@protocol CFCentralManagerDelegate
@optional
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscover:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData rssi:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnect:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didUpdateANCSAuthorizationFor:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central connectionEventDidOccur:(CBConnectionEvent)event for:(CBPeripheral * _Nonnull)peripheral;
@end


SWIFT_CLASS("_TtC11CFDeviceKit14CFCodableModel")
@interface CFCodableModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, CFCommandState, open) {
  CFCommandStateHasNotSend = 0,
  CFCommandStateWrittenSucceed = 1,
  CFCommandStateTimedOut = 2,
  CFCommandStateReceivedSucceed = 3,
  CFCommandStateFailed = 4,
};


SWIFT_CLASS("_TtC11CFDeviceKit22CFCommunicationHandler")
@interface CFCommunicationHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CFStepTargetModel;

@interface CFCommunicationHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)setStepTargetWithModel:(CFStepTargetModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getStepTargetWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFStepTargetModel * _Nullable))completion;
@end

@class CFMcuDateInfoModel;
@class CFReminderModel;
@class CFReminderIntervalModel;
@class CFScreenTextModel;
@class CFSystemSettingsModel;
enum CFSystemInfoType : NSInteger;
@class CFSystemInfomationModel;
@class CFMotorUsageModel;
@class CFScreenUsageModel;
@class CFHeartRateUsageModel;
enum CFDeviceOperationType : NSInteger;
enum CFWeekHealthDataType : NSInteger;
@class CFWeekHealthDataModel;

@interface CFCommunicationHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)setMcuDateWithModel:(CFMcuDateInfoModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getMcuDateWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFMcuDateInfoModel * _Nullable))completion;
- (void)setReminderWithModel:(CFReminderModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getReminderWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFReminderModel * _Nullable))completion;
- (void)setReminderIntervalWithModel:(CFReminderIntervalModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getReminderIntervalWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFReminderIntervalModel * _Nullable))completion;
- (void)showTextOnScreenWithModel:(CFScreenTextModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)setSystemSettingsWithModel:(CFSystemSettingsModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getSystemSettingsWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFSystemSettingsModel * _Nullable))completion;
- (void)setAlarmClockWithModel:(CFAlarmClockModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getAlarmClockWithIndex:(NSInteger)index completion:(void (^ _Nullable)(enum CFCommandState, CFAlarmClockModel * _Nullable))completion;
- (void)getSystemInfoWithInfoType:(enum CFSystemInfoType)infoType completion:(void (^ _Nullable)(enum CFCommandState, CFSystemInfomationModel * _Nullable))completion;
- (void)setSystemInfoWithInfoType:(enum CFSystemInfoType)infoType model:(CFSystemInfomationModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getMotorUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFMotorUsageModel * _Nullable))completion;
- (void)clearMotorUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getScreenUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFScreenUsageModel * _Nullable))completion;
- (void)clearScreenUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getHeartRateUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFHeartRateUsageModel * _Nullable))completion;
- (void)clearHeartRateUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getBluetoothUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFBluetoothUsageModel * _Nullable))completion;
- (void)clearBluetoothUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)systemOperationWithOperationType:(enum CFDeviceOperationType)operationType completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getWeekHealthDataWithDataType:(enum CFWeekHealthDataType)dataType completion:(void (^ _Nullable)(enum CFCommandState, NSArray<CFWeekHealthDataModel *> * _Nullable))completion;
@end

enum CFDeviceType : NSInteger;

SWIFT_CLASS("_TtC11CFDeviceKit19CFConnectionHandler")
@interface CFConnectionHandler : NSObject
- (void)scanDeviceWith:(enum CFDeviceType)deviceType;
- (void)stopScan;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface CFConnectionHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)connectWithDeviceModel:(CFDeviceModel * _Nonnull)deviceModel;
- (void)disconnect;
@end

typedef SWIFT_ENUM(NSInteger, CFConnectionState, open) {
  CFConnectionStateDisconnected = 0,
  CFConnectionStateSearching = 1,
  CFConnectionStateConnecting = 2,
  CFConnectionStateConnected = 3,
  CFConnectionStateSuccessfully = 4,
  CFConnectionStateReadyForUse = 5,
  CFConnectionStateFailed = 6,
};

@class NSError;

SWIFT_CLASS("_TtC11CFDeviceKit17CFDataSyncHandler")
@interface CFDataSyncHandler : NSObject
- (void)syncDataWith:(NSArray<NSNumber *> * _Nonnull)dataTypes beginning:(void (^ _Nullable)(void))beginning progress:(void (^ _Nullable)(CGFloat))progress result:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP11CFDeviceKit16CFDeviceDelegate_")
@protocol CFDeviceDelegate
- (void)connectionStateDidChangeWithDeviceModel:(CFDeviceModel * _Nullable)deviceModel newState:(enum CFConnectionState)newState;
@optional
- (void)didDiscoverDeviceWithDeviceModels:(NSArray<CFDeviceModel *> * _Nonnull)deviceModels;
@end


SWIFT_CLASS("_TtC11CFDeviceKit13CFDeviceModel")
@interface CFDeviceModel : CFCodableModel
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull uuid;
@property (nonatomic, copy) NSString * _Nonnull macAddress;
@property (nonatomic) NSInteger identifier;
@property (nonatomic, copy) NSString * _Nonnull rssiValue;
@property (nonatomic, strong) CBPeripheral * _Nullable peripheral;
@property (nonatomic) enum CFConnectionState connectionState;
@property (nonatomic, strong) CFCommunicationHandler * _Nonnull communicatinHandler;
@property (nonatomic, strong) CFDataSyncHandler * _Nonnull dataSyncHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

typedef SWIFT_ENUM(NSInteger, CFDeviceOperationType, open) {
  CFDeviceOperationTypeFactoryTest1 = 0,
  CFDeviceOperationTypeFactoryTest2 = 1,
  CFDeviceOperationTypeReboot = 2,
  CFDeviceOperationTypeShutdown = 3,
};

typedef SWIFT_ENUM(NSInteger, CFDeviceType, open) {
  CFDeviceTypeWatch = 0,
};


SWIFT_CLASS("_TtC11CFDeviceKit21CFHeartRateUsageModel")
@interface CFHeartRateUsageModel : NSObject
@property (nonatomic) double measureDuration;
@property (nonatomic) double measureTimes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

SWIFT_CLASS("_TtC11CFDeviceKit18CFMcuDateInfoModel")
@interface CFMcuDateInfoModel : NSObject
@property (nonatomic, copy) NSDate * _Nonnull date;
- (nullable instancetype)initWithDate:(NSDate * _Nullable)date OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFMotorUsageModel")
@interface CFMotorUsageModel : NSObject
@property (nonatomic) double vibratedDuration;
@property (nonatomic) double vibratedTimesForReminder;
@property (nonatomic) double vibratedDurationForReminder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11CFDeviceKit23CFReminderIntervalModel")
@interface CFReminderIntervalModel : NSObject
@property (nonatomic) NSInteger interval;
- (nonnull instancetype)initWithInterval:(NSInteger)interval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit15CFReminderModel")
@interface CFReminderModel : NSObject
@property (nonatomic) BOOL call;
@property (nonatomic) BOOL others;
- (nonnull instancetype)initWithCall:(BOOL)call others:(BOOL)others OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFScreenTextModel")
@interface CFScreenTextModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull textToShow;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit18CFScreenUsageModel")
@interface CFScreenUsageModel : NSObject
@property (nonatomic) double screenOnDuration;
@property (nonatomic) double wakeTimesOnRaise;
@property (nonatomic) double wakeDurationOnRaise;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFStepTargetModel")
@interface CFStepTargetModel : NSObject
@property (nonatomic) NSInteger stepTarget;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, CFSyncDataError, open) {
  CFSyncDataErrorDataLengthError = 0,
  CFSyncDataErrorRequestDataError = 1,
};

enum CFSyncDataType : NSInteger;

SWIFT_CLASS("_TtC11CFDeviceKit15CFSyncDataModel")
@interface CFSyncDataModel : NSObject
@property (nonatomic) NSTimeInterval timeInterval;
@property (nonatomic) NSInteger value;
- (nonnull instancetype)initWithDataType:(enum CFSyncDataType)dataType timeInterval:(NSTimeInterval)timeInterval value:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, CFSyncDataType, open) {
  CFSyncDataTypeStep = 0,
  CFSyncDataTypeSleep = 1,
  CFSyncDataTypeHr = 2,
};

typedef SWIFT_ENUM(NSInteger, CFSystemInfoType, open) {
  CFSystemInfoTypeCategory = 0,
  CFSystemInfoTypeUdid = 1,
  CFSystemInfoTypeOtaProjectName = 2,
  CFSystemInfoTypeOtaBranchName = 3,
  CFSystemInfoTypeFwVersion = 4,
  CFSystemInfoTypeCompiledDate = 5,
  CFSystemInfoTypeCompiledTime = 6,
  CFSystemInfoTypeCompiledBatchNum = 7,
  CFSystemInfoTypeSystemType = 8,
  CFSystemInfoTypeBroadcastName = 9,
  CFSystemInfoTypeMacAddress = 10,
  CFSystemInfoTypeBindingState = 11,
};

enum CFSystemType : uint8_t;

SWIFT_CLASS("_TtC11CFDeviceKit23CFSystemInfomationModel")
@interface CFSystemInfomationModel : NSObject
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable udid;
@property (nonatomic, copy) NSString * _Nullable otaName;
@property (nonatomic, copy) NSString * _Nullable fwVersion;
@property (nonatomic, copy) NSString * _Nullable compiledDate;
@property (nonatomic, copy) NSString * _Nullable compiledTime;
@property (nonatomic, copy) NSString * _Nullable compiledBatchNum;
@property (nonatomic) enum CFSystemType systemType;
@property (nonatomic, copy) NSString * _Nullable broadcastName;
@property (nonatomic, copy) NSString * _Nullable macAddress;
@property (nonatomic) BOOL isBinded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC11CFDeviceKit21CFSystemSettingsModel")
@interface CFSystemSettingsModel : NSObject
@property (nonatomic) BOOL raiseToWake;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(uint8_t, CFSystemType, open) {
  CFSystemTypeIOS = 0x00,
  CFSystemTypeAndroid = 0x01,
  CFSystemTypeOthers = 0xff,
};


SWIFT_CLASS("_TtC11CFDeviceKit21CFWeekHealthDataModel")
@interface CFWeekHealthDataModel : NSObject
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSTimeInterval timeInterval;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit22CFWeekBloodOxygenModel")
@interface CFWeekBloodOxygenModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger boValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit23CFWeekBloodPresureModel")
@interface CFWeekBloodPresureModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger sbpValue;
@property (nonatomic) NSInteger dbpValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit26CFWeekBodyTemperatureModel")
@interface CFWeekBodyTemperatureModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) CGFloat btValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




typedef SWIFT_ENUM(NSInteger, CFWeekHealthDataType, open) {
  CFWeekHealthDataTypeUnknown = 0,
  CFWeekHealthDataTypeStep = 1,
  CFWeekHealthDataTypeHeartRate = 2,
  CFWeekHealthDataTypeBloodOxygen = 3,
  CFWeekHealthDataTypeBloodPressure = 4,
  CFWeekHealthDataTypeBodyTemperature = 5,
};


SWIFT_CLASS("_TtC11CFDeviceKit20CFWeekHeartRateModel")
@interface CFWeekHeartRateModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger hrValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit16CFWeekStepsModel")
@interface CFWeekStepsModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger daySteps;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit19DXProgressOperation")
@interface DXProgressOperation : NSOperation
@property (nonatomic, getter=isExecuting) BOOL executing;
@property (nonatomic, getter=isFinished) BOOL finished;
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
- (void)start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
#ifndef CFDEVICEKIT_SWIFT_H
#define CFDEVICEKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreBluetooth;
@import Foundation;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CFDeviceKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class NSNumber;

SWIFT_CLASS("_TtC11CFDeviceKit17CFAlarmClockModel")
@interface CFAlarmClockModel : NSObject
@property (nonatomic) NSInteger index;
@property (nonatomic) BOOL activated;
@property (nonatomic) NSInteger hour;
@property (nonatomic) NSInteger minute;
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull repeatDaysWithNumbers;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



typedef SWIFT_ENUM(NSInteger, CFAlarmRepeatDay, open) {
  CFAlarmRepeatDaySun = 0,
  CFAlarmRepeatDayMon = 1,
  CFAlarmRepeatDayTue = 2,
  CFAlarmRepeatDayWed = 3,
  CFAlarmRepeatDayThu = 4,
  CFAlarmRepeatDayFri = 5,
  CFAlarmRepeatDaySat = 6,
};

@class CFConnectionHandler;
@class CFDeviceModel;
@protocol CFCentralManagerDelegate;

SWIFT_CLASS("_TtC11CFDeviceKit12CFBLEManager")
@interface CFBLEManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) CFBLEManager * _Nonnull shared;)
+ (CFBLEManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) CFConnectionHandler * _Null_unspecified connectionHandler;
@property (nonatomic, strong) CFDeviceModel * _Nullable currentDevice;
@property (nonatomic, weak) id <CFCentralManagerDelegate> _Nullable bleManagerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol CFDeviceDelegate;

@interface CFBLEManager (SWIFT_EXTENSION(CFDeviceKit))
- (void)addDeviceDelegate:(id <CFDeviceDelegate> _Nonnull)aDelegate;
@end


SWIFT_CLASS("_TtC11CFDeviceKit21CFBluetoothUsageModel")
@interface CFBluetoothUsageModel : NSObject
@property (nonatomic) double broadcastDuration;
@property (nonatomic) double connectionDuration;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class CBCentralManager;
@class CBPeripheral;
@class NSString;

SWIFT_PROTOCOL("_TtP11CFDeviceKit24CFCentralManagerDelegate_")
@protocol CFCentralManagerDelegate
@optional
- (void)centralManagerDidUpdateState:(CBCentralManager * _Nonnull)central;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDiscover:(CBPeripheral * _Nonnull)peripheral advertisementData:(NSDictionary<NSString *, id> * _Nonnull)advertisementData rssi:(NSNumber * _Nonnull)RSSI;
- (void)centralManager:(CBCentralManager * _Nonnull)central didConnect:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central didDisconnectPeripheral:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didFailToConnect:(CBPeripheral * _Nonnull)peripheral error:(NSError * _Nullable)error;
- (void)centralManager:(CBCentralManager * _Nonnull)central didUpdateANCSAuthorizationFor:(CBPeripheral * _Nonnull)peripheral;
- (void)centralManager:(CBCentralManager * _Nonnull)central connectionEventDidOccur:(CBConnectionEvent)event for:(CBPeripheral * _Nonnull)peripheral;
@end


SWIFT_CLASS("_TtC11CFDeviceKit14CFCodableModel")
@interface CFCodableModel : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, CFCommandState, open) {
  CFCommandStateHasNotSend = 0,
  CFCommandStateWrittenSucceed = 1,
  CFCommandStateTimedOut = 2,
  CFCommandStateReceivedSucceed = 3,
  CFCommandStateFailed = 4,
};


SWIFT_CLASS("_TtC11CFDeviceKit22CFCommunicationHandler")
@interface CFCommunicationHandler : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CFStepTargetModel;

@interface CFCommunicationHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)setStepTargetWithModel:(CFStepTargetModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getStepTargetWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFStepTargetModel * _Nullable))completion;
@end

@class CFMcuDateInfoModel;
@class CFReminderModel;
@class CFReminderIntervalModel;
@class CFScreenTextModel;
@class CFSystemSettingsModel;
enum CFSystemInfoType : NSInteger;
@class CFSystemInfomationModel;
@class CFMotorUsageModel;
@class CFScreenUsageModel;
@class CFHeartRateUsageModel;
enum CFDeviceOperationType : NSInteger;
enum CFWeekHealthDataType : NSInteger;
@class CFWeekHealthDataModel;

@interface CFCommunicationHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)setMcuDateWithModel:(CFMcuDateInfoModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getMcuDateWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFMcuDateInfoModel * _Nullable))completion;
- (void)setReminderWithModel:(CFReminderModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getReminderWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFReminderModel * _Nullable))completion;
- (void)setReminderIntervalWithModel:(CFReminderIntervalModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getReminderIntervalWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFReminderIntervalModel * _Nullable))completion;
- (void)showTextOnScreenWithModel:(CFScreenTextModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)setSystemSettingsWithModel:(CFSystemSettingsModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getSystemSettingsWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFSystemSettingsModel * _Nullable))completion;
- (void)setAlarmClockWithModel:(CFAlarmClockModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getAlarmClockWithIndex:(NSInteger)index completion:(void (^ _Nullable)(enum CFCommandState, CFAlarmClockModel * _Nullable))completion;
- (void)getSystemInfoWithInfoType:(enum CFSystemInfoType)infoType completion:(void (^ _Nullable)(enum CFCommandState, CFSystemInfomationModel * _Nullable))completion;
- (void)setSystemInfoWithInfoType:(enum CFSystemInfoType)infoType model:(CFSystemInfomationModel * _Nonnull)model completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getMotorUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFMotorUsageModel * _Nullable))completion;
- (void)clearMotorUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getScreenUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFScreenUsageModel * _Nullable))completion;
- (void)clearScreenUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getHeartRateUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFHeartRateUsageModel * _Nullable))completion;
- (void)clearHeartRateUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getBluetoothUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState, CFBluetoothUsageModel * _Nullable))completion;
- (void)clearBluetoothUsageDataWithCompletion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)systemOperationWithOperationType:(enum CFDeviceOperationType)operationType completion:(void (^ _Nullable)(enum CFCommandState))completion;
- (void)getWeekHealthDataWithDataType:(enum CFWeekHealthDataType)dataType completion:(void (^ _Nullable)(enum CFCommandState, NSArray<CFWeekHealthDataModel *> * _Nullable))completion;
@end

enum CFDeviceType : NSInteger;

SWIFT_CLASS("_TtC11CFDeviceKit19CFConnectionHandler")
@interface CFConnectionHandler : NSObject
- (void)scanDeviceWith:(enum CFDeviceType)deviceType;
- (void)stopScan;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



@interface CFConnectionHandler (SWIFT_EXTENSION(CFDeviceKit))
- (void)connectWithDeviceModel:(CFDeviceModel * _Nonnull)deviceModel;
- (void)disconnect;
@end

typedef SWIFT_ENUM(NSInteger, CFConnectionState, open) {
  CFConnectionStateDisconnected = 0,
  CFConnectionStateSearching = 1,
  CFConnectionStateConnecting = 2,
  CFConnectionStateConnected = 3,
  CFConnectionStateSuccessfully = 4,
  CFConnectionStateReadyForUse = 5,
  CFConnectionStateFailed = 6,
};

@class NSError;

SWIFT_CLASS("_TtC11CFDeviceKit17CFDataSyncHandler")
@interface CFDataSyncHandler : NSObject
- (void)syncDataWith:(NSArray<NSNumber *> * _Nonnull)dataTypes beginning:(void (^ _Nullable)(void))beginning progress:(void (^ _Nullable)(CGFloat))progress result:(void (^ _Nullable)(NSDictionary<NSString *, id> * _Nullable, NSError * _Nullable))result;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_PROTOCOL("_TtP11CFDeviceKit16CFDeviceDelegate_")
@protocol CFDeviceDelegate
- (void)connectionStateDidChangeWithDeviceModel:(CFDeviceModel * _Nullable)deviceModel newState:(enum CFConnectionState)newState;
@optional
- (void)didDiscoverDeviceWithDeviceModels:(NSArray<CFDeviceModel *> * _Nonnull)deviceModels;
@end


SWIFT_CLASS("_TtC11CFDeviceKit13CFDeviceModel")
@interface CFDeviceModel : CFCodableModel
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull uuid;
@property (nonatomic, copy) NSString * _Nonnull macAddress;
@property (nonatomic) NSInteger identifier;
@property (nonatomic, copy) NSString * _Nonnull rssiValue;
@property (nonatomic, strong) CBPeripheral * _Nullable peripheral;
@property (nonatomic) enum CFConnectionState connectionState;
@property (nonatomic, strong) CFCommunicationHandler * _Nonnull communicatinHandler;
@property (nonatomic, strong) CFDataSyncHandler * _Nonnull dataSyncHandler;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@property (nonatomic, readonly, copy) NSString * _Nonnull debugDescription;
@end

typedef SWIFT_ENUM(NSInteger, CFDeviceOperationType, open) {
  CFDeviceOperationTypeFactoryTest1 = 0,
  CFDeviceOperationTypeFactoryTest2 = 1,
  CFDeviceOperationTypeReboot = 2,
  CFDeviceOperationTypeShutdown = 3,
};

typedef SWIFT_ENUM(NSInteger, CFDeviceType, open) {
  CFDeviceTypeWatch = 0,
};


SWIFT_CLASS("_TtC11CFDeviceKit21CFHeartRateUsageModel")
@interface CFHeartRateUsageModel : NSObject
@property (nonatomic) double measureDuration;
@property (nonatomic) double measureTimes;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSDate;

SWIFT_CLASS("_TtC11CFDeviceKit18CFMcuDateInfoModel")
@interface CFMcuDateInfoModel : NSObject
@property (nonatomic, copy) NSDate * _Nonnull date;
- (nullable instancetype)initWithDate:(NSDate * _Nullable)date OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFMotorUsageModel")
@interface CFMotorUsageModel : NSObject
@property (nonatomic) double vibratedDuration;
@property (nonatomic) double vibratedTimesForReminder;
@property (nonatomic) double vibratedDurationForReminder;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11CFDeviceKit23CFReminderIntervalModel")
@interface CFReminderIntervalModel : NSObject
@property (nonatomic) NSInteger interval;
- (nonnull instancetype)initWithInterval:(NSInteger)interval OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit15CFReminderModel")
@interface CFReminderModel : NSObject
@property (nonatomic) BOOL call;
@property (nonatomic) BOOL others;
- (nonnull instancetype)initWithCall:(BOOL)call others:(BOOL)others OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFScreenTextModel")
@interface CFScreenTextModel : NSObject
@property (nonatomic, copy) NSString * _Nonnull textToShow;
- (nonnull instancetype)initWithText:(NSString * _Nonnull)text OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC11CFDeviceKit18CFScreenUsageModel")
@interface CFScreenUsageModel : NSObject
@property (nonatomic) double screenOnDuration;
@property (nonatomic) double wakeTimesOnRaise;
@property (nonatomic) double wakeDurationOnRaise;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC11CFDeviceKit17CFStepTargetModel")
@interface CFStepTargetModel : NSObject
@property (nonatomic) NSInteger stepTarget;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, CFSyncDataError, open) {
  CFSyncDataErrorDataLengthError = 0,
  CFSyncDataErrorRequestDataError = 1,
};

enum CFSyncDataType : NSInteger;

SWIFT_CLASS("_TtC11CFDeviceKit15CFSyncDataModel")
@interface CFSyncDataModel : NSObject
@property (nonatomic) NSTimeInterval timeInterval;
@property (nonatomic) NSInteger value;
- (nonnull instancetype)initWithDataType:(enum CFSyncDataType)dataType timeInterval:(NSTimeInterval)timeInterval value:(NSInteger)value OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


typedef SWIFT_ENUM(NSInteger, CFSyncDataType, open) {
  CFSyncDataTypeStep = 0,
  CFSyncDataTypeSleep = 1,
  CFSyncDataTypeHr = 2,
};

typedef SWIFT_ENUM(NSInteger, CFSystemInfoType, open) {
  CFSystemInfoTypeCategory = 0,
  CFSystemInfoTypeUdid = 1,
  CFSystemInfoTypeOtaProjectName = 2,
  CFSystemInfoTypeOtaBranchName = 3,
  CFSystemInfoTypeFwVersion = 4,
  CFSystemInfoTypeCompiledDate = 5,
  CFSystemInfoTypeCompiledTime = 6,
  CFSystemInfoTypeCompiledBatchNum = 7,
  CFSystemInfoTypeSystemType = 8,
  CFSystemInfoTypeBroadcastName = 9,
  CFSystemInfoTypeMacAddress = 10,
  CFSystemInfoTypeBindingState = 11,
};

enum CFSystemType : uint8_t;

SWIFT_CLASS("_TtC11CFDeviceKit23CFSystemInfomationModel")
@interface CFSystemInfomationModel : NSObject
@property (nonatomic, copy) NSString * _Nullable category;
@property (nonatomic, copy) NSString * _Nullable udid;
@property (nonatomic, copy) NSString * _Nullable otaName;
@property (nonatomic, copy) NSString * _Nullable fwVersion;
@property (nonatomic, copy) NSString * _Nullable compiledDate;
@property (nonatomic, copy) NSString * _Nullable compiledTime;
@property (nonatomic, copy) NSString * _Nullable compiledBatchNum;
@property (nonatomic) enum CFSystemType systemType;
@property (nonatomic, copy) NSString * _Nullable broadcastName;
@property (nonatomic, copy) NSString * _Nullable macAddress;
@property (nonatomic) BOOL isBinded;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




SWIFT_CLASS("_TtC11CFDeviceKit21CFSystemSettingsModel")
@interface CFSystemSettingsModel : NSObject
@property (nonatomic) BOOL raiseToWake;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(uint8_t, CFSystemType, open) {
  CFSystemTypeIOS = 0x00,
  CFSystemTypeAndroid = 0x01,
  CFSystemTypeOthers = 0xff,
};


SWIFT_CLASS("_TtC11CFDeviceKit21CFWeekHealthDataModel")
@interface CFWeekHealthDataModel : NSObject
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSTimeInterval timeInterval;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit22CFWeekBloodOxygenModel")
@interface CFWeekBloodOxygenModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger boValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit23CFWeekBloodPresureModel")
@interface CFWeekBloodPresureModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger sbpValue;
@property (nonatomic) NSInteger dbpValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit26CFWeekBodyTemperatureModel")
@interface CFWeekBodyTemperatureModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) CGFloat btValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




typedef SWIFT_ENUM(NSInteger, CFWeekHealthDataType, open) {
  CFWeekHealthDataTypeUnknown = 0,
  CFWeekHealthDataTypeStep = 1,
  CFWeekHealthDataTypeHeartRate = 2,
  CFWeekHealthDataTypeBloodOxygen = 3,
  CFWeekHealthDataTypeBloodPressure = 4,
  CFWeekHealthDataTypeBodyTemperature = 5,
};


SWIFT_CLASS("_TtC11CFDeviceKit20CFWeekHeartRateModel")
@interface CFWeekHeartRateModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger hrValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit16CFWeekStepsModel")
@interface CFWeekStepsModel : CFWeekHealthDataModel
@property (nonatomic, readonly) enum CFWeekHealthDataType dataType;
@property (nonatomic) NSInteger daySteps;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC11CFDeviceKit19DXProgressOperation")
@interface DXProgressOperation : NSOperation
@property (nonatomic, getter=isExecuting) BOOL executing;
@property (nonatomic, getter=isFinished) BOOL finished;
@property (nonatomic, readonly, getter=isAsynchronous) BOOL asynchronous;
- (void)start;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
